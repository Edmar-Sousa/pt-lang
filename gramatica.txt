<program> ::= <stmt_sequence> 'EOF'

<stmt_sequence> ::= <stmt> <stmt_sequence> | <stmt>

stmt ::= <stmt_var>    | 
         <stmt_assign> |
         <stmt_func>   |
         <stmt_if>     |
         <stmt_loop>   |
         <stmt_print>

stmt_print := 'imprimir' '(' <exp> ')' ';'

<stmt_if> ::= 'SE' '(' <exp> ')' '{' <stmt_sequence> '}' | 'SE' '(' <exp> ')' '{' <stmt_sequence> '}' 'SENAO' '{' <stmt_sequence> '}'

<stmt_var> ::= 'variavel' 'ID' '=' <exp> ';'


<stmt_func> ::= 'funcao' 'ID' '(' <param_list> ')' '{' <func_body> '}'
<param_list> ::= 'ID' ',' <param_list> | 'ID'

<func_body> ::= <stmt_var> <func_body>  |
                <stmt_if> <func_body>   |
                <stmt_loop> <func_body> |
                <stmt_return>

<stmt_return> ::= 'retorne' <exp> ';'


<stmt_loop> ::= 'para' '(' <stmt_var> ';' <exp_relational> ';' <stmt_increment> ')' '{' <loop_body> '}'
<loop_body> ::= <stmt_var> <loop_body>    |
                <stmt_assign> <loop_body> |
                <stmt_if> <loop_body>     |
                <stmt_loop> <loop_body>

<stmt_increment> ::= 'ID' '++' | 
                     'ID' '--'

<stmt_assign> ::= 'ID' '=' <exp>;

<exp> ::= <exp_relational> | <exp_arithmetic>

<exp_relational> ::= <exp_arithmetic> <op_relational> <exp_relational>
<exp_arithmetic> ::= <term> '+' <term> |
                     <term> '-' <term> |
                     <term>

<term> ::= <factor> '*' <factor> |
           <factor> '/' <factor> |
           <factor>

<factor> ::= 'ID' | <number> | '(' <exp_arithmetic> ')'
<number> ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

<op_relational> ::= '<' | '<=' | '>' | '>=' | '!=' | '=='

